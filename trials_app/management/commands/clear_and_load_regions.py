"""
Management command –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π –∏ —Ä–µ–≥–∏–æ–Ω–æ–≤

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python manage.py clear_and_load_regions
"""

from django.core.management.base import BaseCommand
from django.db import transaction
from trials_app.models import Oblast, ClimateZone, Region


class Command(BaseCommand):
    help = '–û—á–∏—Å—Ç–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±–ª–∞—Å—Ç–µ–π –∏ —Ä–µ–≥–∏–æ–Ω–æ–≤'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clear-only',
            action='store_true',
            help='–¢–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –Ω–æ–≤—ã–µ',
        )
        parser.add_argument(
            '--load-only',
            action='store_true',
            help='–¢–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–µ –æ—á–∏—â–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ',
        )

    def handle(self, *args, **options):
        if not options['load_only']:
            self.clear_data()
        
        if not options['clear_only']:
            self.load_new_data()

    def clear_data(self):
        """–û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ"""
        self.stdout.write('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...')
        
        with transaction.atomic():
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã
            regions_count = Region.objects.filter(is_deleted=False).count()
            Region.objects.filter(is_deleted=False).update(is_deleted=True)
            self.stdout.write(f'   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ —Ä–µ–≥–∏–æ–Ω–æ–≤: {regions_count}')
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã
            climate_zones_count = ClimateZone.objects.filter(is_deleted=False).count()
            ClimateZone.objects.filter(is_deleted=False).update(is_deleted=True)
            self.stdout.write(f'   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–æ–Ω: {climate_zones_count}')
            
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±–ª–∞—Å—Ç–∏
            oblasts_count = Oblast.objects.filter(is_deleted=False).count()
            Oblast.objects.filter(is_deleted=False).update(is_deleted=True)
            self.stdout.write(f'   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–æ –æ–±–ª–∞—Å—Ç–µ–π: {oblasts_count}')
        
        self.stdout.write(self.style.SUCCESS('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n'))

    def load_new_data(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–∞–±–ª–∏—Ü–µ"""
        self.stdout.write('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π –∏ —Ä–µ–≥–∏–æ–Ω–æ–≤...\n')
        
        # –î–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
        data = [
            {
                'oblast': '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–õ–µ—Å–æ—Å—Ç–µ–ø–Ω–∞—è –∑–æ–Ω–∞',
                'climate_code': 'forest-steppe',
                'regions': ['–ö–æ–∫—à–µ—Ç–∞—É—Å–∫–∏–π –ì–°–£', '–°–∞–Ω–¥—ã–∫—Ç–∞—É—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–®–æ—Ä—Ç–∞–Ω–¥–∏–Ω—Å–∫–∏–π –ì–°–£', '–¶–µ–ª–∏–Ω–æ–≥—Ä–∞–¥—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ï–≥–∏–Ω–¥—ã–∫–æ–ª—å—Å–∫–∏–π –ì–°–£', '–ñ–∞–∫—Å—ã–Ω—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–õ–µ—Å–æ—Å—Ç–µ–ø–Ω–∞—è –∑–æ–Ω–∞',
                'climate_code': 'forest-steppe',
                'regions': ['–ê—Ä—ã–∫–±–∞–ª—ã–∫—Å–∫–∏–π –ì–°–£', '–ê–π—ã—Ä—Ç–∞—É—Å–∫–∏–π –ì–°–£', '–ï—Å–∏–ª—å—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–†—É–∑–∞–µ–≤—Å–∫–∏–π –ì–°–£', '–®–∞–ª–∞–∫—ã–Ω—Å–∫–∏–π –ì–°–£', '–°–µ—Ä–≥–µ–µ–≤—Å–∫–∏–π –ì–°–£', '–ö—ã–∑—ã–ª–∂–∞—Ä—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–ú–µ–Ω–¥—ã–∫–∞—Ä–∏–Ω—Å–∫–∏–π –ì–°–£', '–§–µ–¥–æ—Ä–æ–≤—Å–∫–∏–π –ì–°–£', '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –ì–°–°', '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ì–°–£', '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∏–π']
            },
            {
                'oblast': '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ–∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ñ–∏—Ç–∏–∫–∞—Ä–∏–Ω—Å–∫–∏–π']
            },
            {
                'oblast': '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–ñ–µ–ª–µ–∑–∏–Ω—Å–∫–∞—è –ì–°–°', '–ü–ª–æ–¥–æ–æ–≤–æ—â–Ω–æ–π –ì–°–£']
            },
            {
                'oblast': '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ–∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ò—Ä—Ç—ã—à—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ì–°–£', '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∏–π –∑–µ—Ä–Ω–æ–≤–æ–π –ì–°–£', '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∏–π –æ–≤–æ—â–Ω–æ–π –ì–°–£']
            },
            {
                'oblast': '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ–∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∏–π –æ–≤–æ—â–Ω–æ–π –ì–°–£', '–û—Å–∫–∞—Ä–æ–≤—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —É–º–µ—Ä–µ–Ω–Ω–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-moderate-arid',
                'regions': ['–ö–∞—Ä–∫–∞—Ä–∞–ª–∏–Ω—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–£–ª—ã—Ç–∞—É',
                'climate_zone': '–ü—É—Å—Ç—ã–Ω–Ω–æ-—Å—Ç–µ–ø–Ω–∞—è —É–º–µ—Ä–µ–Ω–Ω–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'desert-steppe-moderate-arid',
                'regions': ['–ñ–∞–Ω–∞-–ê—Ä–∫–∏–Ω—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ë—É—Ä–ª–∏–Ω—Å–∫–∏–π –ì–°–£', '–ó–µ–ª—ë–Ω–æ–≤—Å–∫–∏–π –ì–°–£', '–£—Ä–∞–ª—å—Å–∫–∏–π –ì–°–£', '–°—ã—Ä—ã–º—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–ê–ª–≥–∏–Ω—Å–∫–∏–π –ì–°–£', '–ê–π—Ç–µ–∫–µ–±–∏–π—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ—É–≤–ª–∞–∂–Ω–µ–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–ú–∞—Ä—Ç—É–∫—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-low-arid',
                'regions': ['–®–µ–º–æ–Ω–∞–∏—Ö–∏–Ω—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —É–º–µ—Ä–µ–Ω–Ω–æ-–∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-moderate-arid',
                'regions': ['–ö—É—Ä—á—É–º—Å–∫–∏–π –ì–°–°']
            },
            {
                'oblast': '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–ì–°–£ –ê–ª—Ç–∞–π']
            },
            {
                'oblast': '–ê–±–∞–π',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —Å–ª–∞–±–æ —É–≤–ª–∞–∂–Ω—ë–Ω–Ω–∞—è',
                'climate_code': 'steppe-low-humid',
                'regions': ['–ö–æ–∫–ø–µ–∫—Ç–∏–Ω—Å–∫–∏–π –ì–°–£', '–ù–æ–≤–æ–ø–æ–∫—Ä–æ–≤—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–±–∞–π',
                'climate_zone': '–°—Ç–µ–ø–Ω–∞—è —É–º–µ—Ä–µ–Ω–Ω–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'steppe-moderate-arid',
                'regions': ['–£—Ä–¥–∂–∞—Ä—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–±–∞–π',
                'climate_zone': '–ü—É—Å—Ç—ã–Ω–Ω–æ-—Å—Ç–µ–ø–Ω–∞—è —É–º–µ—Ä–µ–Ω–Ω–æ –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'desert-steppe-moderate-arid',
                'regions': ['–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏–π']
            },
            {
                'oblast': '–ñ–µ—Ç—ñ—Å—É',
                'climate_zone': '–ü—Ä–µ–¥–≥–æ—Ä–Ω–∞—è (–î–∂—É–Ω–≥–∞—Ä—Å–∫–∏–π –ê–ª–∞—Ç–∞—É, —Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥ –¢—è–Ω—å-–®–∞–Ω—å)',
                'climate_code': 'foothill-dzungarian-tienshan',
                'regions': ['–ü–ª–æ–¥–æ–≤–æ-—è–≥–æ–¥–Ω—ã–π –ì–°–£', '–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω—Å–∫–∏–π –ø/—è–≥–æ–¥–Ω—ã–π –ì–°–£', '–ö–∞—Ä–∞–±—É–ª–∞–∫—Å–∫–∏–π –ì–°–£', '–ö–æ–≥–∞–ª–∏–Ω—Å–∫–∏–π –ì–°–£', '–°–∞—Ä–∫–∞–Ω–¥—Å–∫–∏–π –ì–°–£', '–ü–∞–Ω—Ñ–∏–ª–æ–≤—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ñ–µ—Ç—ñ—Å—É',
                'climate_zone': '–ü—Ä–µ–¥–≥–æ—Ä–Ω–∞—è (–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π –¢—è–Ω—å-–®–∞–Ω—å)',
                'climate_code': 'foothill-northwest-tienshan',
                'regions': ['–ö–µ—Ä–±—É–ª–∞–∫—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–ü—É—Å—Ç—ã–Ω–Ω–∞—è –æ—á–µ–Ω—å –∑–∞—Å—É—à–ª–∏–≤–∞—è',
                'climate_code': 'desert-very-arid',
                'regions': ['–ë–∞–ª—Ö–∞—à—Å–∫–∏–π —Ä–∏—Å–æ–≤—ã–π']
            },
            {
                'oblast': '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–ü—Ä–µ–¥–≥–æ—Ä–Ω–∞—è (–ó–∞–∏–ª–∏–π—Å–∫–∏–π –ê–ª–∞—Ç–∞—É)',
                'climate_code': 'foothill-zailiysky-alatau',
                'regions': ['–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π –ø/—è–≥–æ–¥–Ω—ã–π –ì–°–£', '–ö–∞—Å–∫–µ–ª–µ–Ω—Å–∫–∏–π –ø/—è–≥–æ–¥–Ω—ã–π –ì–°–£', '–ï–Ω–±–µ–∫—à–∏–∫–∞–∑–∞—Ö—Å–∫–∏–π –ì–°–£', '–ò–ª–∏–π—Å–∫–∏–π –∑–µ—Ä–Ω–æ–≤–æ–π –ì–°–£', '–ò–ª–∏–π—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ì–°–£', '–†–∞–π—ã–º–±–µ–∫—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è',
                'climate_zone': '–ü—É—Å—Ç—ã–Ω–Ω–∞—è —Å—É—Ö–∞—è',
                'climate_code': 'desert-dry',
                'regions': ['–®–∏–µ–ª–∏–π—Å–∫–∏–π –ì–°–£', '–ñ–∞–Ω–∞–∫–æ—Ä–≥–∞–Ω—Å–∫–∏–π –ì–°–£', '–ö–∞–∑–∞–ª–∏–Ω—Å–∫–∏–π –ì–°–£', '–ñ–∞–ª–∞–≥–∞—à—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–ñ–∞–º–±—ã–ª—Å–∫–∞—è',
                'climate_zone': '–ü—Ä–µ–¥–≥–æ—Ä–Ω–∞—è (–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π –¢—è–Ω—å-–®–∞–Ω—å)',
                'climate_code': 'foothill-northwest-tienshan',
                'regions': ['–¢.–†—ã—Å–∫—É–ª–æ–≤—Å–∫–∏–π –ì–°–£', '–ñ—É–∞–ª–∏–Ω—Å–∫–∏–π –ì–°–£', '–ñ–∞–º–±—ã–ª—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ì–°–£', '–ë–∞–π–∑–∞–∫—Å–∫–∏–π –ì–°–£']
            },
            {
                'oblast': '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è',
                'climate_zone': '–ü—Ä–µ–¥–≥–æ—Ä–Ω–∞—è (–°–µ–≤–µ—Ä–Ω–æ–≥–æ –∏ –ó–∞–ø–∞–¥–Ω–æ–≥–æ –¢—è–Ω—å-–®–∞–Ω—è)',
                'climate_code': 'foothill-north-west-tienshan',
                'regions': ['–°–∞—Ä—ã–∞–≥–∞—à—Å–∫–∏–π –ì–°–£', '–õ–µ–Ω–≥–µ—Ä—Å–∫–∏–π –ì–°–£', '–°–∞–π—Ä–∞–º—Å–∫–∏–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ì–°–£', '–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏–π –ì–°–£', '–°–∞—Ä—ã–∞–≥–∞—à—Å–∫–∏–π –ø/—è–≥–æ–¥–Ω—ã–π –ì–°–£', '–°–∞—Ä—ã–∞–≥–∞—à—Å–∫–∏–π —Ö–ª–æ–ø–∫–æ–≤—ã–π –ì–°–£', '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∏–π –ì–°–£']
            },
        ]
        
        with transaction.atomic():
            oblasts_created = 0
            climate_zones_created = 0
            regions_created = 0
            
            # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏
            unique_oblasts = set()
            for item in data:
                unique_oblasts.add(item['oblast'])
            
            # –°–æ–∑–¥–∞–µ–º –æ–±–ª–∞—Å—Ç–∏
            for oblast_name in unique_oblasts:
                oblast, created = Oblast.objects.get_or_create(
                    name=oblast_name,
                    defaults={
                        'code': self.generate_oblast_code(oblast_name)
                    }
                )
                if created:
                    oblasts_created += 1
                    self.stdout.write(
                        self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –æ–±–ª–∞—Å—Ç—å: {oblast_name}')
                    )
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã –∏ —Ä–µ–≥–∏–æ–Ω—ã
            for item in data:
                # –ü–æ–ª—É—á–∏—Ç—å –æ–±–ª–∞—Å—Ç—å
                try:
                    oblast = Oblast.objects.get(name=item['oblast'])
                except Oblast.DoesNotExist:
                    self.stdout.write(
                        self.style.ERROR(f'‚ùå –û–±–ª–∞—Å—Ç—å "{item["oblast"]}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
                    )
                    continue
                
                # –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–æ–Ω—É
                climate_zone, created = ClimateZone.objects.get_or_create(
                    code=item['climate_code'],
                    defaults={
                        'name': item['climate_zone'],
                        'description': f'–ü—Ä–∏—Ä–æ–¥–Ω–æ-–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–æ–Ω–∞: {item["climate_zone"]}'
                    }
                )
                
                if created:
                    climate_zones_created += 1
                    self.stdout.write(
                        self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–æ–Ω–∞: {climate_zone.name}')
                    )
                
                # –°–æ–∑–¥–∞—Ç—å —Ä–µ–≥–∏–æ–Ω—ã
                for region_name in item['regions']:
                    region, created = Region.objects.get_or_create(
                        name=region_name,
                        oblast=oblast,
                        defaults={'climate_zone': climate_zone}
                    )
                    
                    if created:
                        regions_created += 1
                        self.stdout.write(
                            self.style.SUCCESS(f'   ‚úÖ –°–æ–∑–¥–∞–Ω —Ä–µ–≥–∏–æ–Ω: {region_name} ({oblast.name}) - {climate_zone.name}')
                        )
        
        self.stdout.write('\n' + '='*60)
        self.stdout.write(self.style.SUCCESS(f'\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))
        self.stdout.write(f'   –û–±–ª–∞—Å—Ç–µ–π —Å–æ–∑–¥–∞–Ω–æ: {oblasts_created}')
        self.stdout.write(f'   –ö–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–æ–Ω —Å–æ–∑–¥–∞–Ω–æ: {climate_zones_created}')
        self.stdout.write(f'   –†–µ–≥–∏–æ–Ω–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {regions_created}')
        self.stdout.write('='*60 + '\n')

    def generate_oblast_code(self, oblast_name):
        """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –æ–±–ª–∞—Å—Ç–∏"""
        codes = {
            '–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è': 'AKM',
            '–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è': 'SKZ',
            '–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è': 'KST',
            '–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è': 'PAV',
            '–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è': 'KAR',
            '–£–ª—ã—Ç–∞—É': 'ULY',
            '–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è': 'ZKZ',
            '–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è': 'AKT',
            '–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è': 'VKZ',
            '–ê–±–∞–π': 'ABA',
            '–ñ–µ—Ç—ñ—Å—É': 'ZET',
            '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è': 'ALM',
            '–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è': 'KZY',
            '–ñ–∞–º–±—ã–ª—Å–∫–∞—è': 'ZAM',
            '–¢—É—Ä–∫–µ—Å—Ç–∞–Ω—Å–∫–∞—è': 'TUR',
        }
        return codes.get(oblast_name, 'UNK')

