#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö endpoints:
- cultures-for-region
- pending-for-region (—Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º culture_id)

–ó–∞–ø—É—Å–∫:
    python test_new_endpoints.py
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'trials.settings')
django.setup()

from django.test import RequestFactory
from rest_framework.test import force_authenticate
from django.contrib.auth.models import User
from trials_app.views import ApplicationViewSet
from trials_app.models import (
    Oblast, Region, Culture, SortRecord, Application, PlannedDistribution
)


def print_separator(title):
    """–ü–µ—á–∞—Ç—å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è"""
    print("\n" + "="*70)
    print(f"  {title}")
    print("="*70)


def test_cultures_for_region():
    """–¢–µ—Å—Ç 1: GET /api/v1/applications/cultures-for-region/?region_id={id}"""
    print_separator("–¢–ï–°–¢ 1: cultures-for-region endpoint")
    
    # –ù–∞–π—Ç–∏ –ª—é–±–æ–π —Ä–µ–≥–∏–æ–Ω —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏
    region = Region.objects.filter(
        planned_distributions__isnull=False,
        is_deleted=False
    ).first()
    
    if not region:
        print("‚ö†Ô∏è  –ù–µ—Ç —Ä–µ–≥–∏–æ–Ω–æ–≤ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.")
        return
    
    print(f"‚úì –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏–æ–Ω: {region.name} (ID: {region.id})")
    
    # –°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å
    factory = RequestFactory()
    request = factory.get(f'/api/v1/applications/cultures-for-region/?region_id={region.id}')
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
    user = User.objects.first()
    if user:
        force_authenticate(request, user=user)
    
    # –í—ã–∑–≤–∞—Ç—å view
    view = ApplicationViewSet.as_view({'get': 'cultures_for_region'})
    response = view(request)
    
    print(f"\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        data = response.data
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:")
        print(f"   –†–µ–≥–∏–æ–Ω: {data.get('region_name')}")
        print(f"   –û–±–ª–∞—Å—Ç—å: {data.get('oblast_name')}")
        print(f"   –ö—É–ª—å—Ç—É—Ä –Ω–∞–π–¥–µ–Ω–æ: {len(data.get('cultures', []))}")
        
        for culture in data.get('cultures', []):
            print(f"\n   üåæ {culture['culture_name']}:")
            print(f"      ‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {culture['applications_count']}")
            print(f"      ‚Ä¢ –û–∂–∏–¥–∞—é—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è: {culture['pending_count']}")
            print(f"      ‚Ä¢ –£–∂–µ –≤ –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö: {culture['in_trial_count']}")
            print(f"      ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã: {', '.join(culture['sample_applications'][:2])}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.data}")


def test_pending_for_region_with_culture():
    """–¢–µ—Å—Ç 2: GET /api/v1/applications/pending-for-region/?region_id={id}&culture_id={id}"""
    print_separator("–¢–ï–°–¢ 2: pending-for-region —Å culture_id")
    
    # –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –∏ –∫—É–ª—å—Ç—É—Ä—É
    region = Region.objects.filter(is_deleted=False).first()
    culture = Culture.objects.filter(is_deleted=False).first()
    
    if not region or not culture:
        print("‚ö†Ô∏è  –ù–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        return
    
    print(f"‚úì –†–µ–≥–∏–æ–Ω: {region.name} (ID: {region.id})")
    print(f"‚úì –ö—É–ª—å—Ç—É—Ä–∞: {culture.name} (ID: {culture.id})")
    
    # –°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å
    factory = RequestFactory()
    request = factory.get(
        f'/api/v1/applications/pending-for-region/?region_id={region.id}&culture_id={culture.id}'
    )
    
    user = User.objects.first()
    if user:
        force_authenticate(request, user=user)
    
    view = ApplicationViewSet.as_view({'get': 'pending_for_region'})
    response = view(request)
    
    print(f"\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        data = response.data
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:")
        print(f"   –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {data.get('total')}")
        print(f"   –†–µ–≥–∏–æ–Ω: {data.get('region_name')}")
        print(f"   –ö—É–ª—å—Ç—É—Ä–∞ ID: {data.get('culture_id')}")
        
        for app in data.get('applications', [])[:3]:
            print(f"\n   üìã {app['application_number']}")
            if app.get('sort_record'):
                print(f"      –°–æ—Ä—Ç: {app['sort_record']['name']}")
            print(f"      –£–∂–µ –≤ –∏—Å–ø—ã—Ç–∞–Ω–∏–∏: {'–î–∞' if app['already_in_trial'] else '–ù–µ—Ç'}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.data}")


def test_pending_for_region_without_culture():
    """–¢–µ—Å—Ç 3: GET /api/v1/applications/pending-for-region/?region_id={id}"""
    print_separator("–¢–ï–°–¢ 3: pending-for-region –ë–ï–ó culture_id (–≤—Å–µ –∫—É–ª—å—Ç—É—Ä—ã)")
    
    region = Region.objects.filter(is_deleted=False).first()
    
    if not region:
        print("‚ö†Ô∏è  –ù–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        return
    
    print(f"‚úì –†–µ–≥–∏–æ–Ω: {region.name} (ID: {region.id})")
    
    # –°–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ë–ï–ó culture_id
    factory = RequestFactory()
    request = factory.get(f'/api/v1/applications/pending-for-region/?region_id={region.id}')
    
    user = User.objects.first()
    if user:
        force_authenticate(request, user=user)
    
    view = ApplicationViewSet.as_view({'get': 'pending_for_region'})
    response = view(request)
    
    print(f"\nüìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    
    if response.status_code == 200:
        data = response.data
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –í–°–ï –∑–∞—è–≤–∫–∏ –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞:")
        print(f"   –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {data.get('total')}")
        print(f"   –†–µ–≥–∏–æ–Ω: {data.get('region_name')}")
        print(f"   –ö—É–ª—å—Ç—É—Ä–∞ ID: {data.get('culture_id')} (None = –≤—Å–µ –∫—É–ª—å—Ç—É—Ä—ã)")
        
        # –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –ø–æ –∫—É–ª—å—Ç—É—Ä–∞–º
        cultures = {}
        for app in data.get('applications', []):
            if app.get('sort_record') and app['sort_record'].get('culture_name'):
                culture_name = app['sort_record']['culture_name']
                if culture_name not in cultures:
                    cultures[culture_name] = []
                cultures[culture_name].append(app['application_number'])
        
        print(f"\n   üìä –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∫—É–ª—å—Ç—É—Ä–∞–º:")
        for culture_name, apps in cultures.items():
            print(f"      ‚Ä¢ {culture_name}: {len(apps)} –∑–∞—è–≤–æ–∫")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.data}")


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("\n" + "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–´–• ENDPOINTS".center(70, "="))
    print("–í–∞—Ä–∏–∞–Ω—Ç A: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è")
    print("="*70)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
        print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   ‚Ä¢ –û–±–ª–∞—Å—Ç–µ–π: {Oblast.objects.filter(is_deleted=False).count()}")
        print(f"   ‚Ä¢ –†–µ–≥–∏–æ–Ω–æ–≤ (–ì–°–£): {Region.objects.filter(is_deleted=False).count()}")
        print(f"   ‚Ä¢ –ö—É–ª—å—Ç—É—Ä: {Culture.objects.filter(is_deleted=False).count()}")
        print(f"   ‚Ä¢ –ó–∞—è–≤–æ–∫: {Application.objects.filter(is_deleted=False).count()}")
        print(f"   ‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π: {PlannedDistribution.objects.filter(is_deleted=False).count()}")
        
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
        test_cultures_for_region()
        test_pending_for_region_with_culture()
        test_pending_for_region_without_culture()
        
        print_separator("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
        print("\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ HTTP:")
        print("   GET http://localhost:8001/api/v1/applications/cultures-for-region/?region_id=1")
        print("   GET http://localhost:8001/api/v1/applications/pending-for-region/?region_id=1")
        print("   GET http://localhost:8001/api/v1/applications/pending-for-region/?region_id=1&culture_id=10")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    main()

